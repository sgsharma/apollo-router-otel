# Default values for router.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# -- See https://www.apollographql.com/docs/router/configuration/overview#configuration-file for yaml structure
router:
  configuration:
    supergraph:
      listen: 0.0.0.0:4000
      preview_defer_support: false
      introspection: true
    health-check:
      listen: 0.0.0.0:8088
    telemetry:
      tracing:
        trace_config:
          service_name: "router"
          service_namespace: "apollo"
          sampler: 1
        otlp:
          endpoint: 0.0.0.0:4317
          # Optional protocol (Defaults to grpc)
          protocol: grpc
      metrics:
        prometheus:
          enabled: true
          listen: 0.0.0.0:9090
          path: "/metrics"


# An array of extra environmental variables
# Example:
extraEnvVars:
  - name: APOLLO_ROUTER_SUPERGRAPH_PATH
    value: /data/supergraph-schema.graphql
  - name: APOLLO_ROUTER_LOG
    value: debug
  - name: APOLLO_ROUTER_HOT_RELOAD
    value: "False"


# An array of extra VolumeMounts
# Example:
extraVolumeMounts:
  - name: supergraph-schema
    mountPath: /data
    readOnly: true
  # - name: router-config
  #   mountPath: /app
  #   readOnly: true


# An array of extra Volumes
extraVolumes:
  - name: supergraph-schema
    configMap:
      name: apollo-router-supergraph
      items:
        - key: supergraph-schema.graphql
          path: supergraph-schema.graphql
  # - name: router-config
  #   configMap:
  #     name: apollo-router-config
  #     items:
  #       - key: router.yaml
  #         path: configuration.yaml


image:
  repository: ghcr.io/apollographql/router
  pullPolicy: IfNotPresent


containerPorts:
  # -- If you override the port in `router.configuration.server.listen` then make sure to match the listen port here
  http: 4000
  # -- For exposing the metrics port when running a serviceMonitor for example
  metrics: 9090
  # -- For exposing the healthcheck endpoint
  health: 8088

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""


podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000


service:
  type: ClusterIP
  port: 80
  annotations: {}

serviceMonitor:
  enabled: false

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

